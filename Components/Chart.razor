@using StockPredictionWeb.Models
@using StockPredictionWeb.Components

<LineChart @ref="lineChart" />

@code {
    [Inject]
    private StockDataService StockDataService { get; set; }
    private BarChart barChart;
    private LineChart lineChart;

    private List<StockData> stockData;
    private List<double> actualPrices;
    private List<double> predictedPrices;

    private List<StockData> stockDataLSTM;
    private List<double> actualPricesLSTM;
    private List<double> predictedPricesLSTM;

    private List<string> labels;


    protected override async Task OnInitializedAsync()
    {
        stockData = await StockDataService.GetStockDataAsync();
        actualPrices = stockData.Select(item => item.ActualPrices).ToList();
        predictedPrices = stockData.Select(item => item.PredictedPrices).ToList();
        labels = stockData.Select(item => item.Date.ToShortDateString()).ToList();
        stockDataLSTM = await StockDataService.GetStockDataLSTMAsync();
        predictedPricesLSTM = stockDataLSTM.Select(item => item.PredictedPrices).ToList();
        await RenderWormAsync();
    }

    private async Task RenderWormAsync()
    {
        var data = new ChartData
            {
                Labels = labels,
                Datasets = new List<IChartDataset>()
                {
                    new LineChartDataset()
                    {
                        Label = "Actual prices",
                        Data = actualPrices,
                        BackgroundColor = new List<string>{ "rgb(255, 166, 0)" },
                        BorderColor = new List<string>{ "rgb(255, 166, 0)" },
                        BorderWidth = new List<double>{2},
                        HoverBorderWidth = new List<double>{4},
                        PointBackgroundColor = new List<string>{ "rgb(255, 166, 0)" },
                        PointBorderColor = new List<string>{ "rgb(255, 166, 0)" },
                        PointRadius = new List<int>{0}, // hide points
                        PointHoverRadius = new List<int>{4},
                    },
                    new LineChartDataset()
                    {
                        Label = "Predicted prices GRU ",
                        Data = predictedPrices,
                        BackgroundColor = new List<string>{ "rgb(88, 80, 141)" },
                        BorderColor = new List<string>{ "rgb(88, 80, 141)" },
                        BorderWidth = new List<double>{2},
                        HoverBorderWidth = new List<double>{4},
                        PointBackgroundColor = new List<string>{ "rgb(88, 80, 141)" },
                        PointBorderColor = new List<string>{ "rgb(88, 80, 141)" },
                        PointRadius = new List<int>{0}, // hide points
                        PointHoverRadius = new List<int>{4},
                    },
                    new LineChartDataset()
                    {
                        Label = "Predicted prices LSTM",
                        Data = predictedPricesLSTM,
                        BackgroundColor = new List<string>{ "rgb(20, 222, 0)" },
                        BorderColor = new List<string>{ "rgb(20, 222, 0)" },
                        BorderWidth = new List<double>{2},
                        HoverBorderWidth = new List<double>{4},
                        PointBackgroundColor = new List<string>{ "rgb(20, 222, 0)" },
                        PointBorderColor = new List<string>{ "rgb(20, 222, 0)" },
                        PointRadius = new List<int>{0}, // hide points
                        PointHoverRadius = new List<int>{4},
                    }
                }
            };

        var options = new LineChartOptions();

        options.Interaction.Mode = InteractionMode.Index;
        options.Responsive = true;

        options.Scales.X.Title.Text = "Date";
        options.Scales.X.Title.Display = true;

        options.Plugins.Title.Text = "Predicted prices for Apple stock";
        options.Plugins.Title.Display = true;
        options.Plugins.Title.Font.Size = 20;

        options.Scales.Y.Title.Text = "Price";
        options.Scales.Y.Title.Display = true;

        await lineChart.InitializeAsync(data, options);
    }
}
